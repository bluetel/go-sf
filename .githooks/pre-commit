#!/bin/sh

# What are we doing
printf "\e[1;93mRunning pre-commit hooks...\e[0;39m \n"

# Our failure flag
FAILURE=false

# Get staged go files that we want to run checks on
STAGED_FILES=$(git ls-files --full-name | grep ".go$")

if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi
printf "\e[90mRunning golint...\e[0;39m\n"
# Run go lint on the staged files
for stagedFile in $STAGED_FILES; do
    # Run golint
    $(golint -set_exit_status $stagedFile)
    if [[ $? != 0 ]]; then
        FAILURE=true
    fi
done

# Run go vet on the entire package, doesn't support single files like lint
printf "\e[90mRunning go vet...\e[0;39m\n"
go vet $STAGED_FILES
if [[ $? != 0 ]]; then
    FAILURE=true
fi

printf "\e[90mDone! \n"

if [[ $FAILURE != false ]]; then
    printf "\n\e[91mCommit Failed! \n"
    exit 1
fi

printf "\n\e[32mCommit Successful! \n"
exit 0
